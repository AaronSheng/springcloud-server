buildscript {
    ext {
        kotlinVersion = '1.2.50'
        gradleShadowVersion = "2.0.2"
        gradleJooqVersion = "2.0.7"
        gradleDependencyVersion = "1.0.4.RELEASE"
        springBootVersion = "1.5.11.RELEASE"
        springCloudVersion = "1.3.0.RELEASE"
        swaggerVersion = "1.5.17"
        jaxrsVersion = "2.0"
        jacksonVersion = "2.9.2"
        esVersion = "5.5.2"
        hashidsVersion = "1.0.3"
        feignVersion = "9.5.1"
        okHttpVersion = "3.9.1"
        commonExecVersion = "1.3"
        bouncyCastleVersion = "1.46"
        dom4jVersion = "1.6.1"
        slf4jVersion = "1.7.25"
        mockitoVersion = "1.10.19"
        httpclientVersion = "4.3.6"
        compressVersion = "1.15"
        jsonLibVersion = "2.4"
        commonLang3Version = "3.5"
        guavaVersion = "21.0"
        cronutilsVersion = "7.0.1"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "nu.studer:gradle-jooq-plugin:$gradleJooqVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "io.spring.gradle:dependency-management-plugin:$gradleDependencyVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:$gradleShadowVersion"
    }
}

allprojects {
    group 'com.aaron'
    version '1.0.0'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: "io.spring.dependency-management"

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    tasks.withType(JavaCompile).all {
        options.encoding = "UTF-8"
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    
    configurations {
        all*.exclude group: "ch.qos.logback", module: "logback-classic"
        all*.exclude group: "org.slf4j", module: "log4j-over-slf4j"
        all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
    }

    dependencyManagement {
        applyMavenExclusions = false

        dependencies {
            imports {
                mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
            }
            dependency "io.swagger:swagger-annotations:$swaggerVersion"
            dependency "javax.ws.rs:javax.ws.rs-api:$jaxrsVersion"
            dependency "io.swagger:swagger-jersey2-jaxrs:$swaggerVersion"

            dependency "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
            dependency "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
            dependency "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
            dependency "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
            dependency "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jacksonVersion"
            dependency "com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:$jacksonVersion"

            dependencySet(group: "org.springframework.cloud", version: "$springCloudVersion") {
                entry "spring-cloud-starter-consul-discovery"
                entry "spring-cloud-starter-consul-core"
                entry "spring-cloud-starter-sleuth"
                entry "spring-cloud-config-server"
            }
        }
    }
}